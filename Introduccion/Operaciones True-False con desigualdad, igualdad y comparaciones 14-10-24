#include <iostream>
using namespace std;

int main()
{
	//nato
	bool bb = true;
	cout << boolalpha;
	cout << bb << endl; //imprime true en lugar de 1

	char opcion1 = 'a';
	cout << opcion1 << endl;
	
	//logicos (true/false)

	//operaciones con desigualdad, comparaciones, magnitud

	//enteros
	int n1 = 10;
	int n2 = 20;

	//floats
	float f1 = 1.5;
	float f2 = 5.2;

	//1. igualdad
	cout << "(n1 == n2): " << (n1 == n2) << endl;
	cout << "(f2 == f2): " << (f1 == f2) << endl;


	//2. desigualdad
	cout << "(n1 != n2): " << (n1 != n2) << endl;
	cout << "(f1 != f2): " << (f1 != f2) << endl;


	//3. Mayor que
	cout << "(n1 > n2): " << (n1 > n2) << endl;
	cout << "(f1 > f2): " << (f1 > f2) << endl;


	//4. Menor que
	cout << "(n1 < n2): " << (n1 < n2) << endl;
	cout << "(f1 < f2): " << (f1 < f2) << endl;


	//5. Mayor o igual que
	cout << "(n1 >= n2): " << (n1 >= n2) << endl;
	cout << "(f1 >= f2): " << (f1 >= f2) << endl;


	//6. Menor o igual que
	cout << "(n1 <= n2): " << (n1 <= n2) << endl;
	cout << "(f1 <= f2): " << (f1 <= f2) << endl;


	//7. Comparaciones de tipos mixtos
	cout << "(n1 > f2): " << (n1 > f2) << endl;
	cout << "(f1 < n2): " << (f1 < n2) << endl;


	//8. Valores negativos
	cout << "(n1 > -n2): " << (n1 = -n2) << endl; 
	cout << "(f1 < -f2): " << (f1 < -f2) << endl;


	//9. combinaciones de comparaciones
	cout << "((n1 < n2) && (f1 > f2)): " << ((n1 > n2) && (f1 > f2)) << endl;
	cout << "((n1 == 10) || (f1 == 5.2): " << ((n1 == 10) || (f1 == 5.2)) << endl;

	//Puedes usar la palabra and en lugar de &&
	//Puedes usar la palabra or en lugar de ||
	cout << "((n1 < n2) and (f1 > f2)): " << ((n1 > n2) and (f1 > f2)) << endl;
	cout << "((n1 == 10) or (f1 == 5.2): " << ((n1 == 10) or (f1 == 5.2)) << endl;


	//10. Comparaciones anidadas
	cout << "(n1 > n2 - 10): " << (n1 > n2 - 10) << endl;
	cout << "(f1 <= f2 + 10.5): " << (f1 <= f2 + 10.5) << endl;


	//11.Comparación anidadas 
	cout << "(n1 == 10): " << (n1 == 10) << endl;
	cout << "(f1 == 5.2: " << (f1 == 5.2) << endl;


	//12. Comparación con los resultados de las operaciones aritméticas
	cout << "((n1 + n2) < (f1 * f2)): " << ((n1 + n2) < (f1 * f2)) << endl;
	cout << "((n1 + n2) >= (f1 / f2)): " << ((n1 + n2) >= (f1 / f2)) << endl;


	//13. Comparación de resultados negativos y positivos 
	cout << "((-n1) < n2): " << ((-n1) < n2) << endl;
	cout << "((-f1) > f2): " << ((-f1) > f2) << endl;


	//14. Combinación de aritméticas y comparación
	cout << "((n1 * n2) > (f1 - f2)): " << ((n1 * n2) > (f1 - f2)) << endl;
	cout << "((n2 / n1) <= (f1 + f2)): " << ((n2 / n1) <= (f1 + f2)) << endl;


	//15. Comparaciones encadenadas 
	cout << "(n1 < n2 and n2 < f1): " << (n1 < n2 and n2 < f1) << endl;
	cout << "(f2 > f1 and f1 > n1): " << (f2 > f1 and f1 > n1) << endl;


	//16. Comparación de modulos
	cout << "((n2 % n1) == 0): " << ((n2 % n1) == 0) << endl;


	//Operadores lógicos
	bool p = true, q = false;

	//17. Lógico AND
	cout << "(p and q): " << (p and q);

	//18. Or Lógico
	cout << "(p or q): " << (p or q);

	//19. Lógico NOT
	//Puedes usar la palabra not en lugar de !
	cout << "(!p): " << (not(p));

	//20. Combinación de AND y NOT
	cout << "(p and not(q)): " << (p and not(q)) << endl;

	//21. Doble NOT
	cout << "(not(not(q))): " << (not(not(q))) << endl;

	//22. Operaciones mixtas 
	cout << "(not(p and q) or (p or not(q))): " << (not(p and q) or (p or not(q))) << endl;

	//23. Asignación de variables con operadores lógicos
	bool a = p and q;
	cout << "Valor asignado a variable 'a': " << a << endl;

	//24. Opercaciónes lógicas con números enteros (distinto de 0 es verdadero, cero es falso)
	int x = 5, y = 0;
	cout << "(x and y): " << (x and y) << endl;

	//25.Operaciónes lógicas con tipos de datos mixtos
	float m = 3.5, n = 0.0;
	cout << "(m or n): " << (m or n) << endl;

	//26. Expreciones complejas
	cout << "((p or q) and (x or n)): " << ((p or q) and (x or n)) << endl;

	//27. Experciones anidadas
	cout << "((x and not((y)) and (m or not(q)): " << ((x and not(y)) and (m or not(q))) << endl;

	//28. Operaciones lógicas con números de punto florante
	cout << "((m > n) and (m <= 3.5)): " << ((m > n) and (m <= 3.5));

	//29. Uso de operadores lógicos con comparación de cadenas de texto (STRING)
	string str1 = "hola", str2 = "mundo!!!";
	cout << "((str1 == str2) or (str1 != str2)): " << ((str1 == str2) or (str1 != str2)) << endl;


}

